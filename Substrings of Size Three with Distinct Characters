Q. A string is good if there are no repeated characters.

Given a string s, return the number of good substrings of length three in s.

Note that if there are multiple occurrences of the same substring, every occurrence should be counted.

A substring is a contiguous sequence of characters in a string.

Example 1:

Input: s = "xyzzaz"
Output: 1
Explanation: There are 4 substrings of size 3: "xyz", "yzz", "zza", and "zaz". 
The only good substring of length 3 is "xyz".

Example 2:

Input: s = "aababcabc"
Output: 4
Explanation: There are 7 substrings of size 3: "aab", "aba", "bab", "abc", "bca", "cab", and "abc".
The good substrings are "abc", "bca", "cab", and "abc".

SOLUTION:

def countGoodSubstrings(s,k):
    count=0
    for i in range(len(s)-k+1):
        substring=list(s[i:k+i])
        if len(set(s[i:i+3]))==len(s[i:i+3]):
            count+=1
    return count

s="aababcabc"
k=3
print(countGoodSubstrings(s,k))
